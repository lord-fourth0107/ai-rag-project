version: '3.8'

services:
  # # API Server

  # clearml-apiserver:
  #   extends:
  #     file: /opt/clearml/docker-compose.yml
  #     service: apiserver

  # # Web Server
  # clearml-webserver:
  #   extends:
  #     file: /opt/clearml/docker-compose.yml
  #     service: webserver

  # # File Server
  # clearml-fileserver:
  #   extends:
  #     file: /opt/clearml/docker-compose.yml
  #     service: fileserver


  app:
    build: 
      context: /Users/sreeharshnamani/Downloads/Assignments_NYU/ai_rag/app
      dockerfile: Dockerfile
    ports:
      - "8000:8000"  # Expose your application port
      - "5303:5303"
      - "7860:7860"
    platform: linux/arm64
    volumes:
      - /Users/sreeharshnamani/Downloads/Assignments_NYU/ai_rag:/app
    environment:
      - PYTHONUNBUFFERED=1
      - HUGGINGFACE_HUB_API_TOKEN=<your_huggingface_token>  # Replace or set via an env variable for security
    # depends_on:
    #   - mongodb
    #   - qdrant
    #   # - clearml-apiserver

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=#rag_project  # Change this for security

  qdrant:
    image: qdrant/qdrant:v1.4.0
    container_name: qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage

  ollama:
    image: ollama/ollama:latest  # Replace with the correct image tag if different
    container_name: ollama_container
    ports:
      - "11000:11000"  # Expose the port as required by the application
    
    restart: unless-stopped


volumes:
  mongodb_data:
  qdrant_data:
  clearml_data:

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge